1
00:00:00,240 --> 00:00:05,190
In this lecture you will create the first class in our application which is the model or the entity

2
00:00:05,190 --> 00:00:12,200
which represents the database table called user that we have three columns ID name and email so we are

3
00:00:12,210 --> 00:00:19,140
going to have three properties in our entity order the spring MBC autumn project started by creating

4
00:00:19,140 --> 00:00:20,870
a SIRC main job.

5
00:00:20,910 --> 00:00:24,060
Right now there is no job for her to carry our score.

6
00:00:24,120 --> 00:00:31,770
So right click on this SHC mean resources say new archosaurs folder click on either search for for it

7
00:00:31,780 --> 00:00:37,710
to select that click Next select mean SIRC mean and direct.

8
00:00:37,710 --> 00:00:42,690
We want a folder called Java finish and this is where all our source code will go.

9
00:00:42,690 --> 00:00:55,230
The very first place will be new class caudate user Bakkies name com dot dot dot spring dot spring MVC

10
00:00:56,610 --> 00:01:02,820
Autum dot our use case which is use up dot NBP.

11
00:01:02,850 --> 00:01:05,160
That is where I want to put all of our entities.

12
00:01:05,160 --> 00:01:14,940
There is only one entity in this use case finish this and it will have three fields but i private end

13
00:01:15,180 --> 00:01:28,390
Id wait in name where it should be private string name and finally private string email serach them

14
00:01:28,390 --> 00:01:31,710
all or the source Jenrette getters and setters.

15
00:01:31,870 --> 00:01:36,420
Select All I want it to be after email it.

16
00:01:36,480 --> 00:01:39,600
OK I can do a lot of effort to format.

17
00:01:39,600 --> 00:01:43,600
Go to Sorsogon generate the two string method.

18
00:01:43,680 --> 00:01:47,060
Ok control shift to format.

19
00:01:47,280 --> 00:01:54,540
We have created the class but we need to mark them with the JP annotations to make it into t so that

20
00:01:54,660 --> 00:02:04,770
Hibernate can map this class to a database row and the fields to database columns at NDB is the very

21
00:02:04,770 --> 00:02:10,690
first annotation and mandatory annotation if you remember from javac start with the stents.

22
00:02:10,710 --> 00:02:14,840
Second the ID should be marked with it.

23
00:02:14,850 --> 00:02:16,630
I'll be back.

24
00:02:16,650 --> 00:02:17,280
Persistence.

25
00:02:17,280 --> 00:02:23,820
These two are compulsory this usually represents a primary key in the database.

26
00:02:23,820 --> 00:02:25,830
Next here we have a name.

27
00:02:25,830 --> 00:02:27,700
Let's check in the database.

28
00:02:27,960 --> 00:02:33,040
We have a name here as well and email is email in the database so we don't need the.

29
00:02:33,060 --> 00:02:36,530
Column attribute because the names here are the same.

30
00:02:36,540 --> 00:02:39,150
They match their database names.

31
00:02:39,150 --> 00:02:45,000
Similarly the table name here matches the class name so we don't have an issue there as well.

32
00:02:45,000 --> 00:02:45,900
But if you want to.

33
00:02:45,930 --> 00:02:52,380
You are welcome to use the at table annotation and within double quotes you can provide the table name

34
00:02:52,380 --> 00:02:58,410
which is used to hit count on one imported from by extort all assistance.

35
00:02:58,520 --> 00:03:07,290
You don't need to format and this should go into the value or the name of the people not a value in

36
00:03:07,290 --> 00:03:07,770
this case.

37
00:03:07,770 --> 00:03:10,980
It should be the name of the table that you've is name.

38
00:03:10,980 --> 00:03:16,400
So in this lecture you have successfully created the model for our application which is user.

