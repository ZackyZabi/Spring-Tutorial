1
00:00:00,290 --> 00:00:06,090
In this lecture, you will learn how to create objects inside the expression as well as how to access

2
00:00:06,090 --> 00:00:10,800
the variables that are inside an object.

3
00:00:10,840 --> 00:00:17,020
So get rid of this value here inside the flower brackets, pound within flower brackets to create an object

4
00:00:17,020 --> 00:00:18,570
of type integer.

5
00:00:18,670 --> 00:00:24,200
We can use the new integer and pass it a value to the constructor.

6
00:00:25,960 --> 00:00:28,240
Within brackets, let's say 88.

7
00:00:28,290 --> 00:00:34,330
Save it, run our test and the value will be 88.

8
00:00:34,330 --> 00:00:35,470
So it's very straightforward.

9
00:00:35,470 --> 00:00:42,090
We use the new operator and then the constructor to invoke the constructor and create an object.

10
00:00:42,270 --> 00:00:48,900
If you want to access a variable or a static variable, we do it in a similar fashion of how you have

11
00:00:48,900 --> 00:00:50,510
access the static method.

12
00:00:50,640 --> 00:00:58,510
For example, the java.lang.integer has a min underscore value and max underscore value inside it.

13
00:00:58,530 --> 00:01:04,340
So T(java.lang.Integer) within brackets,

14
00:01:04,460 --> 00:01:07,320
dot MIN_VALUE.

15
00:01:07,320 --> 00:01:14,370
This is a constant defined inside java.lang.integer. For example, go to test and at the end you can

16
00:01:14,370 --> 00:01:17,040
say integer or do a sysout.

17
00:01:21,690 --> 00:01:24,300
integer dot,

18
00:01:29,550 --> 00:01:32,210
MAX_VALUE and MIN_VALUE, if you see these two

19
00:01:32,220 --> 00:01:36,750
these are constants that are defined inside the integer.

20
00:01:37,020 --> 00:01:44,310
Hit control+space, you can access them like this because there are constants. Hit Control, hold control and

21
00:01:44,310 --> 00:01:46,020
click on it and you can go to the class.

22
00:01:46,020 --> 00:01:49,240
It is a public static final integer field.

23
00:01:49,410 --> 00:01:54,690
And it gives the minimum value that a, or a maximum value that an integer can hold.

24
00:01:54,690 --> 00:02:01,020
Similarly we have a MIN_VALUE which tells the minimum value that a integer data type can

25
00:02:01,110 --> 00:02:01,710
hold.

26
00:02:01,900 --> 00:02:08,330
Do a control+d, get rid of it. Go back to our instructor class.

27
00:02:08,380 --> 00:02:14,360
So here we are assigning the minimum value a integer can hold to this Id field.

28
00:02:14,360 --> 00:02:20,410
It's a static and final field and we are using a T, within brackets the class name and then dot,

29
00:02:20,670 --> 00:02:22,380
access that value.

30
00:02:22,970 --> 00:02:23,980
Let's run the test,

31
00:02:26,890 --> 00:02:31,240
see what that value is. We can't remember that value because it's a huge value.

32
00:02:31,240 --> 00:02:31,890
Here you go.

33
00:02:31,930 --> 00:02:34,450
This is the, it's a negative number.

34
00:02:34,660 --> 00:02:39,000
It's the minimum value that any integer field can hold.

35
00:02:39,010 --> 00:02:48,450
We are assigning it to our field here by using a static expression language syntax on the java.lang.integer.

